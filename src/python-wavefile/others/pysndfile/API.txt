Per obrir un fitxer:
	wavefile = sndfile.open(filename, option)
Option:
	"r" : read
	"w" : write

Per setejar/consultar els camps de metadata. Els canvis fets es guarden automaticament:
	wavefile.setMetada("artist", "Queen")
	print wavefile.getMetada("artist")
		Queen
	wavefile.setMetada("tagincorrecte", "blabla")
		Tag incorrecte

La informaci√≥ de samplerate, frames, channels, format la trobarem com a atributs de la classe, tindra sintaxi de diccionari. Fent wavefile.<TAB> els hauria de llistar
wavefile.<TAB>
{...}, wavefile.samplerate, wavefile.frames, wavefile.channels, wavefile.format {...}
	print wavefile.samplerate
	print wavefile.frames
	print wavefile.channels
	print wavefile.format
Per setejar-los (si el fitxer s'ha obert amb "r" no s'hauria de permetre canviar-los):
	wavefile.channels = 2

Per convertir a un nou format:
	newwavefile = sndfile.open(filename, "w")
	newwavefile = wavefile.convert("encoding")
El format ve determinat per l'extensio de filename
Encoding:
pcms8, pcmu8, pcm16, pcm24, pcm32, float, double, ulaw, alaw, imaadpcm, msadpcm, gsm610, voxadpcm
g721_32, g721_24, g721_40, dwvw12, dwvw16, dwvw24, dpcm8, dpcm16

input = sndfile.sndfile("input.wav", "r")
output = sndfile.sndfile("output.ogg", "w")
# mantenim la sample rate de l'entrada
output.samplerate = input.samplerate
# sigui el que sigui la entrada canviem a float
output.encoding = sndfile.encoding.FLOAT # una idea
output["comment"] = input.get("comment","") + "Filtered by MyFilter"
for frame in output.iterframes(framesize):
	result = process(frame)
	output.write(result)
input.close()
output.close()